{"ast":null,"code":"var _jsxFileName = \"/Users/nitishrana/Desktop/Crypto-Gyan/src/components/CoinsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport { Container, createTheme, TableCell, LinearProgress, ThemeProvider, Typography, TextField, TableBody, TableRow, TableHead, TableContainer, Table, Paper } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../config/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\nexport default function CoinsTable() {\n  _s();\n\n  var _handleSearch;\n\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n  const {\n    currency,\n    symbol\n  } = CryptoState();\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#16171a\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#411530\"\n      },\n      fontFamily: \"Montserrat\"\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {//  color: \"#B93160\",\n      }\n    }\n  });\n  const classes = useStyles();\n  const history = useHistory();\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\"\n      },\n      type: \"dark\"\n    }\n  });\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const {\n      data\n    } = await axios.get(CoinList(currency));\n    console.log(data);\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const handleSearch = () => {\n    return coins.filter(coin => coin.name.toLowerCase().includes(search) || coin.symbol.toLowerCase().includes(search));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ThemeProvider, {\n    theme: darkTheme,\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      style: {\n        textAlign: \"center\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        style: {\n          margin: 18,\n          fontFamily: \"Montserrat\"\n        },\n        children: \"Cryptocurrency Prices by Market Cap\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        label: \"Search For a CryptoCurrency..\",\n        variant: \"outlined\",\n        style: {\n          marginBottom: 20,\n          width: \"100%\"\n        },\n        onChange: e => setSearch(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableContainer, {\n        component: Paper,\n        children: loading ? /*#__PURE__*/_jsxDEV(LinearProgress, {\n          style: {\n            backgroundColor: \"gold\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Table, {\n          \"aria-label\": \"simple table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            style: {\n              backgroundColor: \"#EEBC1D\"\n            },\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map(head => /*#__PURE__*/_jsxDEV(TableCell, {\n                style: {\n                  color: \"black\",\n                  fontWeight: \"700\",\n                  fontFamily: \"Montserrat\"\n                },\n                align: head === \"Coin\" ? \"\" : \"right\",\n                children: head\n              }, head, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            children: handleSearch().slice((page - 1) * 10, (page - 1) * 10 + 10).map(row => {\n              const profit = row.price_change_percentage_24h > 0;\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: () => history.push(`/coins/${row.id}`),\n                className: classes.row,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  component: \"th\",\n                  scope: \"row\",\n                  style: {\n                    display: \"flex\",\n                    gap: 15\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(\"img\", {\n                    src: row === null || row === void 0 ? void 0 : row.image,\n                    alt: row.name,\n                    height: \"50\",\n                    style: {\n                      marginBottom: 10\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 27\n                  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                    style: {\n                      display: \"flex\",\n                      flexDirection: \"column\"\n                    },\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        textTransform: \"uppercase\",\n                        fontSize: 22\n                      },\n                      children: row.symbol\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 29\n                    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                      style: {\n                        color: \"darkgrey\"\n                      },\n                      children: row.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 29\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 149,\n                    columnNumber: 27\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [symbol, \" \", numberWithCommas(row.current_price.toFixed(2))]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  style: {\n                    color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                    fontWeight: 500\n                  },\n                  children: [profit && \"+\", row.price_change_percentage_24h.toFixed(2), \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  align: \"right\",\n                  children: [symbol, \" \", numberWithCommas(row.market_cap.toString().slice(0, -6)), \"M\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 25\n                }, this)]\n              }, row.name, true, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        count: (((_handleSearch = handleSearch()) === null || _handleSearch === void 0 ? void 0 : _handleSearch.length) / 10).toFixed(0),\n        style: {\n          padding: 20,\n          width: \"100%\",\n          display: \"flex\",\n          justifyContent: \"center\"\n        },\n        classes: {\n          ul: classes.pagination\n        },\n        onChange: (_, value) => {\n          setPage(value);\n          window.scroll(0, 450);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CoinsTable, \"NefoAl3INV6fH+96t8UHKcBG8w8=\", true, function () {\n  return [useHistory];\n});\n\n_c = CoinsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"CoinsTable\");","map":{"version":3,"sources":["/Users/nitishrana/Desktop/Crypto-Gyan/src/components/CoinsTable.js"],"names":["React","useEffect","useState","makeStyles","Pagination","Container","createTheme","TableCell","LinearProgress","ThemeProvider","Typography","TextField","TableBody","TableRow","TableHead","TableContainer","Table","Paper","axios","CoinList","useHistory","CryptoState","numberWithCommas","x","toString","replace","CoinsTable","coins","setCoins","loading","setLoading","search","setSearch","page","setPage","currency","symbol","useStyles","row","backgroundColor","cursor","fontFamily","pagination","classes","history","darkTheme","palette","primary","main","type","fetchCoins","data","get","console","log","handleSearch","filter","coin","name","toLowerCase","includes","textAlign","margin","marginBottom","width","e","target","value","map","head","color","fontWeight","slice","profit","price_change_percentage_24h","push","id","display","gap","image","flexDirection","textTransform","fontSize","current_price","toFixed","market_cap","length","padding","justifyContent","ul","_","window","scroll"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Pagination from \"@material-ui/lab/Pagination\";\nimport {\n  Container,\n  createTheme,\n  TableCell,\n  LinearProgress,\n  ThemeProvider,\n  Typography,\n  TextField,\n  TableBody,\n  TableRow,\n  TableHead,\n  TableContainer,\n  Table,\n  Paper,\n} from \"@material-ui/core\";\nimport axios from \"axios\";\nimport { CoinList } from \"../config/api\";\nimport { useHistory } from \"react-router-dom\";\nimport { CryptoState } from \"../CryptoContext\";\n\nexport function numberWithCommas(x) {\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\n}\n\nexport default function CoinsTable() {\n  const [coins, setCoins] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState(\"\");\n  const [page, setPage] = useState(1);\n\n  const { currency, symbol } = CryptoState();\n\n  const useStyles = makeStyles({\n    row: {\n      backgroundColor: \"#16171a\",\n      cursor: \"pointer\",\n      \"&:hover\": {\n        backgroundColor: \"#411530\",\n      },\n      fontFamily: \"Montserrat\",\n    },\n    pagination: {\n      \"& .MuiPaginationItem-root\": {\n      //  color: \"#B93160\",\n      },\n    },\n  });\n\n  const classes = useStyles();\n  const history = useHistory();\n\n  const darkTheme = createTheme({\n    palette: {\n      primary: {\n        main: \"#fff\",\n      },\n      type: \"dark\",\n    },\n  });\n\n  const fetchCoins = async () => {\n    setLoading(true);\n    const { data } = await axios.get(CoinList(currency));\n    console.log(data);\n\n    setCoins(data);\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    fetchCoins();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [currency]);\n\n  const handleSearch = () => {\n    return coins.filter(\n      (coin) =>\n        coin.name.toLowerCase().includes(search) ||\n        coin.symbol.toLowerCase().includes(search)\n    );\n  };\n\n  return (\n    <ThemeProvider theme={darkTheme}>\n      <Container style={{ textAlign: \"center\" }}>\n        <Typography\n          variant=\"h4\"\n          style={{ margin: 18, fontFamily: \"Montserrat\" }}\n        >\n          Cryptocurrency Prices by Market Cap\n        </Typography>\n        <TextField\n          label=\"Search For a CryptoCurrency..\"\n          variant=\"outlined\"\n          style={{ marginBottom: 20, width: \"100%\" }}\n          onChange={(e) => setSearch(e.target.value)}\n        />\n        <TableContainer component={Paper}>\n          {loading ? (\n            <LinearProgress style={{ backgroundColor: \"gold\" }} />\n          ) : (\n            <Table aria-label=\"simple table\">\n              <TableHead style={{ backgroundColor: \"#EEBC1D\" }}>\n                <TableRow>\n                  {[\"Coin\", \"Price\", \"24h Change\", \"Market Cap\"].map((head) => (\n                    <TableCell\n                      style={{\n                        color: \"black\",\n                        fontWeight: \"700\",\n                        fontFamily: \"Montserrat\",\n                      }}\n                      key={head}\n                      align={head === \"Coin\" ? \"\" : \"right\"}\n                    >\n                      {head}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              </TableHead>\n\n              <TableBody>\n                {handleSearch()\n                  .slice((page - 1) * 10, (page - 1) * 10 + 10)\n                  .map((row) => {\n                    const profit = row.price_change_percentage_24h > 0;\n                    return (\n                      <TableRow\n                        onClick={() => history.push(`/coins/${row.id}`)}\n                        className={classes.row}\n                        key={row.name}\n                      >\n                        <TableCell\n                          component=\"th\"\n                          scope=\"row\"\n                          style={{\n                            display: \"flex\",\n                            gap: 15,\n                          }}\n                        >\n                          <img\n                            src={row?.image}\n                            alt={row.name}\n                            height=\"50\"\n                            style={{ marginBottom: 10 }}\n                          />\n                          <div\n                            style={{ display: \"flex\", flexDirection: \"column\" }}\n                          >\n                            <span\n                              style={{\n                                textTransform: \"uppercase\",\n                                fontSize: 22,\n                              }}\n                            >\n                              {row.symbol}\n                            </span>\n                            <span style={{ color: \"darkgrey\" }}>\n                              {row.name}\n                            </span>\n                          </div>\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(row.current_price.toFixed(2))}\n                        </TableCell>\n                        <TableCell\n                          align=\"right\"\n                          style={{\n                            color: profit > 0 ? \"rgb(14, 203, 129)\" : \"red\",\n                            fontWeight: 500,\n                          }}\n                        >\n                          {profit && \"+\"}\n                          {row.price_change_percentage_24h.toFixed(2)}%\n                        </TableCell>\n                        <TableCell align=\"right\">\n                          {symbol}{\" \"}\n                          {numberWithCommas(\n                            row.market_cap.toString().slice(0, -6)\n                          )}\n                          M\n                        </TableCell>\n                      </TableRow>\n                    );\n                  })}\n              </TableBody>\n            </Table>\n          )}\n        </TableContainer>\n\n        {/* Comes from @material-ui/lab */}\n        <Pagination\n          count={(handleSearch()?.length / 10).toFixed(0)}\n          style={{\n            padding: 20,\n            width: \"100%\",\n            display: \"flex\",\n            justifyContent: \"center\",\n          }}\n          classes={{ ul: classes.pagination }}\n          onChange={(_, value) => {\n            setPage(value);\n            window.scroll(0, 450);\n          }}\n        />\n      </Container>\n    </ThemeProvider>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}